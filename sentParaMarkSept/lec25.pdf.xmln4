So,  software change control is nothing but a process just like there was a process forbuilding of  software in the first place building something from scratch the process forintegration and so on there is a process for software change control and that is the processof managing changes to the software system itself and we should see what the process isduring the course of this talk.<s> So there are different strategies for managing change andthis can also be due to the different reasons that may be causing the change within thesoftware itself.<p>

(Refer Slide Time: 6:57)<p>

The first thing is that there is a software maintenance strategy that comes about to handlesmall changes to the code.<s> Typically these kinds of changes do not change the underlyingstructure or the architecture of the software system itself; they are typically meant to fixproblems or errors within system or accommodate very very small enhancements or newrequirements within  the system.<s> So,  an example of  such a change could be that I nowwish to add a history button which will give me the history of the last ten commandstyped on this software system and this was not there before I wish to add something likethis.<p>

So a change such as this may not necessitate any structural changes to the architecture ofthe software.<s> So,  for example, if  it was a  client server system with two serverscoordinating amongst themselves in a distributed fashion this does not have to change toaccommodate the new requirement that has just come in.<s> this is the software maintenancestrategy;  so  nothing very fundamental about the software changes and  incrementalchanges or the code is typically done.<p>

Another one is what is called architectural transformation and this strategy is one that willactually cause a significant change to the structure of the software itself and it typically isdone because you are moving to a different hardware platform for example, the server tomain the server or the mainframe to the distributed system was one such example for this.This architectural transformation could also be a result of, for example, you are changingthe business processes that the software is automating is becoming much more complexas a result of which, for example, you did not have rules engine that was sitting within thesoftware before but now the complications and the complexity within the  softwareactually force you to embed a rules engine into the software so this an example ofarchitectural transformation;  you are changing something fairly fundamental and whenyou introduce a  component such as the rules engine into the software that interact withmany different modules within the software that interaction has to be  very carefullycontrolled.<s> So here is a major enhancement that is being done; it can be architectural inorder to future proof the software as well in this particular case.<p>
