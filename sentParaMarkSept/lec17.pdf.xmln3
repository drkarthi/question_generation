(Refer Slide Time: 07:27)<p>

These are some of the very important principles which need to be taken into accountwhen you are architecting the system.<p>

Abstraction and encapsulation: You must be able to identify the right abstraction atarchitectural levels and then hide the internal information or the internal details throughencapsulation.<s> This is about separating the what  and the how  aspect;  what  does thecomponent do and how it does.<s> If you identify a specific package say the GY package,you should know what it does and then separate how the actual business logic, the actuallogic the GY components are implemented.<s> For the GY package, you will be defining theclasses which are available from that package.<s> Then there may be internal classes in orderto implement the projected behavior outside the given package.<s> You have to separatewhat module does from, how it is done.<p>

Then single point of reference as far as possible.<s> When you have a sub system and thereis a single point of reference into the sub system,  it becomes the reference easier tomanage dependencies.<s> If something changes inside the subsystem it could be reflectedthrough only the single point of reference.<s> If from outside and  if there are manyreferences into a subsystem and if the sub system undergoes changes there will be manydependencies directly outside through multiple points of contact.<s> This is anotherimportant aspect of abstraction and encapsulation.<s> Then a general principle of separationof concerns has to be applied when you are architecting the system.<p>

You  must  separate different concerns.<s> For example different abstractions identifydifferent constructs.<s> Every module or every library or every package does different thingsand  the responsibilities have to be separated out clearly.<s> Separation of interface fromimplementation in order for the external environment or the calling environment onlylooks at interface and identifies  the component through its interface.<s> Implementation isdifferent and is separated.<s> If you separate interface from implementation you get variousbenefits.<s> For example implementation can change and still the calling environment seesno change because interface is the same.<p>

Then separation of concern can be applied for say policies and for the core business logicof the component or the system.<s> The policies are different and the core logic is different.You  have to list out  and identify  policies separately and you  should  have a separatearchitecture for policy implementation.<s> For example, security policies such as your login,password, user accesses like, who can access what, the access matrix and so on.<s> So if youhave policy architecture separate from the core business logic or from the core businesscomponent architecture,  then you are separating the two concerns and it becomes easierto grasp such a system.<s> You have to identify different concerns and give differentarchitectures for these and say what the dependencies amongst them are.<p>

The separation of concerns can also be applied to user interfaces and transactional logic.You separate interfaces from transactional logic or the control logic from the interface thesystem is used.<s> The interface architecture is different from the actual transactional logic.From the interface itself you may not directly operate on the low level data entities, butyou may delegate calls on to the transaction logic and the transactions.<s> Then implementthe operations,  the functions which implement this  business logic.<s> They take care ofrequirements of transactions, they identify the data and then operate on the data they takecare of concurrency and so on.So user interfaces  are separate from transaction logic.<s> Similarly transactions and dataagain  are  separate.<s> The data modeling aspect, the  entity relationships can be  a separateand transactional dependency, which is  a process level architecture can be givenseparately.<s> Again, if you separate the concerns it becomes easier to grasp such a systemand then according to the separation, you can also manage your development.<s> So this is avery important principle  and an experience architect finds out what are the differentconcerns at from different points  of use.<s> For example,  abstractions,  interfaces  andimplementation,  policies,  core logic or transaction logic,  user interfaces,  data modelingand so on.<p>

These are various concerns.<s> Another important principle that is to be applied by architectsis modularity; structuring an organization.<s> This is much related to abstractions.<s> When youfind your abstractions, you are modularizing and then you structure them.<s> You structurethese abstractions,  you structure the module.<s> Module is typically very close to animplementation  level  concept.<s> You can give a module as,  for example a fileimplementing a few functions and then you have structure amongst the modules and thatis your organization of the modular system.<p>

So you can look at modularity/structuring/organization and these are different aspects ofstructuring.<s> Independent modules which are structured give  you an organization ofmodules.<s> The decomposition has to be modular.<s> Again you are applying separation ofconcerns, but now you are talking about slightly more physical architecture or  physicalsystems in terms of modules.<s> Modules are coupled together.<s> So how far should they becoupled?<s> Should two modules depend on each other too much?<s> And within a module, forexample if you are looking at a class as a module, in the class there are private membersand there are public member functions.<p>

Public member functions access your implementation, that is your private data and it maybe possible that you can partition your public member functions into two partitions suchthat they  are  independent  and  they access totally two different sets of private datastructures.<s> In this case the module is not cohesive.<s> It is doing two different things.<s> So youhave not really separated the concerns.<s> A module which is a physical manifestation, givesan  abstraction.<s> It is not really a single abstraction, it may be a composition of twoindependent abstractions, but may have been put together for the sake of convenience.<p>
