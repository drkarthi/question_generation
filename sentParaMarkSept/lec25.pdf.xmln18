The first approach in terms of (..39:10) that you throw it over the wall and say it is notmy head ache  somebody is going to maintain it and then this has the obviousdisadvantages that the people who developed it are the people who are most familiar withthe system design,  architecture  and  the code  yet  if  these  are the people who are notinvolved in maintenance it is going to take a lot more cost, time and effort in order forsomebody else to come up to the same degree of familiarity with the code and system.<s> Sothat notion of machine orientation needs to exist which typically does not which is thatthe development team itself makes a long term commitment to look after the maintenanceof the software; some part of development team certainly needs to live on and provide thequantinity that is required  from development to maintenance  and there are differentmodels that exist; there is the quick fix model in which I am just going to change somecode so  I am not going to go through an exhaustive design process in this case.<s> So, if Iwere to add a feature it might require a design review, change review, test plans have tobe looked at and so on.<s> But if it is a very very small bug that has to be fixed it just mightbe a quick fix change to code; this is the first approach to maintenance that we can takeand  the  disadvantage of this obviously is that it rapidly degrades  the structure of thesoftware if you keep changing the code, if you keep adding a few lines here a few linesthere you do not document it you do not write new test cases for it and pretty much prettysoon you are going to be at a situation where this is non-maintainable.<p>
