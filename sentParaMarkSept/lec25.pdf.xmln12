The study of this is useful from the perspective of realizing how you want to model yourprocess and whether your testing procedures  are adequate or not.<s> So for example,  thefault repair section was 85 percent instead of 70 percent in this case you could argue thatyour testing procedure is completely inadequate and you had to go back and look at themas opposed to changing the working on the change management process by itself.<p>

So another perspective on the same kind of issues we have been discussing is we can lookon maintenance as being of  four different types.<s> One is corrective maintenance andcorrective maintenance is simply  the fixing of bugs;  adaptive maintenance which ischanges brought about because  of  the change in the  environment;  there is couple ofthings which we kind of did not look at and we kind of dumped it under the heading ofnew requirements and we can certainly add that here as well  but that would be a fifthcategory if you work in types of maintenance.<p>

(Refer Slide Time: 26:40 min)<p>

But preventive maintenance is really which I am going to performance tune; I am goingto fix it so that it kind of gets future proof; an analogy you can go back with respect toowning an automobile or car is that you typically end up changing the oil and the oil filteron the car every 3000 kilometers  that is preventative  right; you do not want to run intoproblems later so you are going to do this once every 3000 kilometers.<s> very similar kindsof changes that you can make with the software and example of a very simple change isto document  the  code as you go along;  it is often not done when it needs to be  donewhich is during the development process and preventative maintenance simply says yougo back, go in reverse, engineer it to document the architecture, to document the designso that anybody coming in after that would have to fix the  bug,  would have to add amodule  here and to make changes to the module will immediately know what structurethe  software has and they will not spend as  much time in hunting down the differentaspects of the software itself.<p>

And  lastly the last category is what is called perfective maintenance.<s> Perfectivemaintenance can be things like improving performance.<s> So you might have met theperformance requirements of the goal of let us say response time of less than five secondsfor a particular function of logging into a system but you may want to improve on thateven more even though it is not a requirement you may want to improve on that becauseyou know that the software is going to have to scale from a hundred users today  to tenthousand users in a couple of months so you may make changes to the software to say Iam going to perfect it; I am going to make it take as smaller amount of time as it possiblycan; this is the theoretical limit which we can go and I can bring it down to the theoreticallimit and so on.<p>
