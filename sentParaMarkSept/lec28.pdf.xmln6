So one other thing that we would like to come back to is we saw the notion of reuse withcomponents earlier.<s> One  of the topics that we want to close  out on that is how do youcreate components to be reused.<p>

(Refer Slide Time: 22:33 min)<p>

Remember earlier we saw that there were two paradigms your design with use and designfor  reuse and in this case we would like to take a look at specifically in the case ofcomponents because components are essentially things that you create or unitencapsulated units of functionality that are meant to be reused  in the first place.<s> So wewould like to take a look at how do you make a component become more reusable  sothere is no such things; it  is  not a black and white, it is not a Boolean thing that this isusable and this is not.<s> Typically the degree of reusability depends on how well design thiscomponent has.<p>

So let us see the look at what it takes for us to make a component become reusable in thefuture.<s> the typically the general strategy that is used is generalization.<s> So you would takea component that was built for a specific purpose but you would generalize you wouldraise a level of abstraction and generalize so that this can be used in multiple situationswith the API that you are going to provide the component.<s> So the component reusabilityfeatures are that it should reflect table domain abstraction what does this mean.<p>

So, if there is some feature in the domain that this component is representing let us say ifyou  are  in the network management domain it may be representing a MIB which is aManagement Information Base for a network device.<s> Now, the notion of the MIB is verystandard;  the notion of interface with the MIB  are  well established, there are  SNMPstandards that existed since decades so there is a certain stability in the domain as far asthe MIB is concerned.<p>

But if you take a look for example at the Java management extensions jpi which are nowslowly beginning to penetrate the network management domain it is not very stable it isvery new, very experimental in nature and is something that keeps changing.<p>

So what we want is really the component should reflect a fairly stable domain abstractionthat is when the component will live and will not change by itself every time the domainabstraction changes.<s> It should hide the state representation; the only thing that you wantout of a component is what it is capable of doing not how it is going to do it.<s> This is thestandard principle of  object orientation that we extend into this  into this  scenario.<s> Itshould be as independent as possible.<p>

So remember, the component has to characterize by the interface that it depends on andthe interface that it provides and the number of interfaces that it depends on should be asminimal as possible otherwise this is not a very reusable component because every timeyou bring this component then you would have to make sure that the other interfaceswere available so you might have bring in a whole host of other component to support it.And finally it should publish all the exceptions that can occur through  the componentinterface this is very important because there may be situations the component is not ableto handle; unless it lets you know that this is exactly what happened and I cannot handlethe situation you will not be able to take evasive,  corrective or whatever kind of actionyou need take at that point of time.<p>

So  the exceptions have to be well published as  part of the components  interface also.Suddenly  there will exist a certain tradeoff.<s> When  you start making components to  bemore reusable your tending to be it is becoming more generate whereas the component inthe first case could have done with say four or five methods four or five functions thatperformed.<s> Now,  to make it to be a more  generic  equipment  you might have  to addanother five or six functions.<p>

So  now the usability of the component because it has ten or twelve functions  theunderstandability and the usability of the component goes down.<s> But it is certainly farmore generic; it is applicable in a variety of situations in this case so that is the tradeoffthat you would have to make.<s> The tradeoff is that you make it more generic, make it morereusable but the degree of reusability starts coming down that point of time because it isthat much harder to understand the component interfaces now.<s> This is something that youhave to keep in mind going forward.<p>

(Refer Slide Time: 26:44 min)<p>

The cost is certainly something that is to be borne in mind because the cost of developingthe reusable component is  significantly higher than the cost of developing a  specificequivalent.<s> What we mean by this is that if you are developing a component or a modulejust for that one application alone; suppose you are developing a widget for taking a textinput in a UI is a good example for component the widget might if it were being writtenin a very specific manner for that particular application may be that application onlyrequire two lines  of input for example and you are restricting it to two lines of input  atthis point in time but this is a specificity this is the specific feature that when you want tomake this generic you need to certainly allow for customization of the number of lines ofinput that can be accepted by this particular text input box widget.<s> So you are making thismore complicated but for a reason so that it can be reused across multiple scenarios.<p>

Now this comes out of cost so you have to add the configuration interfaces otherwise youhave to test the configuration interfaces and all this is going to cost both in terms of timeand in terms of money.<s> So how this cost gets absorbed; does it get absorbed as cost of theproject or it  gets  absorbed  as  part of  the  organizational cost  that  cuts  across multipleprojects because its component is now reusable across multiple projects is something thatyou have to keep in mind and if there is a right encouragement within the organization todevelop reusable components  then this will be a successful project going forward elsetypically reuse and design for reuse is likely to fail.<p>

So  what are the kinds  of enhancements that would have to be made to components inorder to make them  reusable going forward is a question that you would like to askyourself.<p>

(Refer Slide Time: 28:41 min)<p>

We talked about generalization is the key strategy that is be adopted when you make thecomponent reusable.<s> So what are the different types of generalization that can be doneand what are the details of these.<s> So, the first one is generalization of names.<s> Names in acomponent can be modified to  so that they are not in direct reflection of the specificapplication entity.<s> What  this means is that in the case of a text box let us  say  that  theapplication could have  been developed  was  a  telecommunications  application.<s> Atelecommunications  application for a particular company,  for  a  particular departmenthad this widget that you are developing text box input widget.<p>

Now,  if you name the widget as something that is very specific to that applicationbecause it belongs to part of that applications  package then it  loses  some  of thegenerosity so you might just want to name it a text box widget and you may provide aninheritance hierarchy that is completely generic in nature; it should  not  be inheriting,  itshould not be.<s> so anything along the path the naming path that it contains should notbe specific to that particular application that is the first thing.<p>

The second one is one of operational generalization.<s> This can be done in two ways.<s> Oneis specific operational interfaces, can be extended to make it more generic.<s> For example,if you are taking in let us say two parameters to a specific operation and in order to makethis operation be generic  you might want to take in a third parameter which alwaysdefaults to a  particular case as far as your application is  concerned.<s> Therefore, thestrategy to deal with it is that you add the third parameter but you add a default value forthe  third parameter so that when it is not specified the application or the componentalways assumes the default so that way you have provided for a generic scenario whichcan be used by multiple people but that specific application for which it is beingdeveloped does not need to have the overhead of specifying the third parameter everytime it is going to use the component so that is  one dimension along which operationalgeneralization can be done.The  second dimension is  one of adding different operations.<s> So the example that wetalked about earlier was that of a lisp  or a stack so instead of creating  a specific lessstructure that is only going to be used  for that particular application you can create anabstract data type which can be a link list data type or doubly link list data type and thismay need many more operations that can be used in different scenarios.<s> A good examplecould be that let us assume that in your application you are always going to append to theend of the list there was no question of inserting into the middle of the list.<p>

So you really did not need a function called to say insert into a list at position N but in thecase that you want this to be a generic component you certainly want a function calledthat says insert into the list at position N, also, you want another call let us say append tothe list that is it is at the end of the list.<s> So  here is an  example of operationalgeneralization where you want to  add certain methods  so you may also need to havesome methods for initialization specific kinds of initialization that can be done somultiple constructors might have to be provided to be an object interface.<s> Different waysof dealing with instruction in the component would have to be provided; cleaning up ofthe component would have to be provided and so on and so forth.<p>

The  third one is the exception generalization.<s> So  here many more exceptions  that couldoccur in different scenarios which  would might have to be added.<s> So,  for example,component is to be used only in a local access method or it can be remotely accessedfrom some place.<s> So, if you want to make this a generic component you obviously needto add exceptions that deal with remote communication exceptions that may occur on thenetwork because now the component can be accessed  remotely which means it can beaccessed in a distributed manner over the network.<p>

So,  to increase the robustness of the component,  to increase the situations that thiscomponent can handle you essentially have to make sure that application specificexceptions are removed and exceptions that are fairly generic and exception managementis taken is paid in a pretension to increase the robustness of the component.<p>
