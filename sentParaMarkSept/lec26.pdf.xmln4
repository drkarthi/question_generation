(Refer Slide Time: 21:50 min)<p>

The  process  of  prototyping is fairly straightforward.<s> So you basically establish theobjectives of the prototype as shown here in the diagram and you come up with aprototyping plan because of that, then you define the functionality of the prototype so it iskind of like developing a small module of software very very similar to that and then youdevelop the prototype, evaluate the prototype and so on.<s> Eventually  a prototype may infact result in a better specification of the system and as we shall see it may not result inany kind of code that can be reused at all.<p>

(Refer Slide Time: 22:36 min)<p>

Prototypes are typically throw away in nature because of the fact that you have  putsomething in the prototype to test functionality but that may not necessarily meet in non-functional needs of the system.<s> Performance is a  very good example which is mostcommonly  encountered here.<s> So the algorithm for  example that you pick up maybesomething that meets the functional needs of the specification, the functional needs of theuser but it may be impossible to meet some of the performance needs of the user which isa non-functional need which is equally important at the end of the day.<s> So the prototypewill  validate say the functional need and say  you can certainly design the system usingthis idea, this design pattern and so on but it has to be developed from scratch now usingdifferent algorithms to enhance performance and so on, that is one thing.<p>

Prototypes typically are very rarely documented so you do not want to keep at around it isdone basically from a designers perspective, it is done from the perspective of the personwho is designing the system initially and so they do not focus on documentation, if that iskept around then you will be left with no documentation on the design of the system  atthe end of the day and that can prove very hard in maintenance.<p>

The  prototype structure usually gets very rapidly degraded.<s> because of the amount  ofchanges that is being made to the prototype you are touching the code very often and youare making small or  lot  of  changes typically small changes very often because you aretrying to tune the system at that point in time; you are trying to tune your design, you aretrying to find out which is the best idea that are going to work within the context to theserequirements  so  the structure is usually quite degraded after a  period of time andmaintainability drops as we have already seen in certain earlier lectures and it will mostoften not meet the quality standards of the organization so that there will be some codingstandard for example that most software organizations end up tending to follow both withrespect to documentation as well as with respect to code and most prototype do not meetthat because that is not what they are meant to do, they are not meant to be real code inthe first place they are meant to stress out certain ideas so these are what are called throwaway prototypes.<p>

More often they are not that prototype should be thrown away it is only in very very raresituations that they are retained and extended and augmented, enhanced etc so also meetthe other requirements of the system.<p>
