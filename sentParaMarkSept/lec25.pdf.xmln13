Improving the usability is a  never ending process; it  is an excellent example of aperfective change because it is never very easy and it has no metric to say the system isperfective in terms of usability; it is always the it is a very subjective topic on the metricand you can always keep improving on it as you go long.<s> So,  if  you take a look at thebreak up of costs with respect to the types of maintenance that we just discussed it is alsoan interesting study to do and what this shows is that the preventative maintenance isvery very small which means it is usually not done and the breakup of cost is really basedon the empirical studies that have been done it is not any kind of formula that exist, it isjust based on the empirical studies that have been done across a  number of softwaresystems from the last twenty five to thirty years.<p>

(Refer Slide Time: 29:00 min)<p>

So, preventative maintenance is really very very small in this case; adaptive maintenanceis about 25 percent which is something that deals with the 17 percent figure that we sawin the earlier slide,  corrective maintenance is also about 20  percent which is again verymuch in line with what we saw earlier, users enhancement being about 50 percent; againit is very very similar and user enhancements can be considered efficiency improvement,performance improvement and so on can be considered to be perfective in nature wherethe rest of them can be considered to be preventative, adaptive and so on.<p>

(Refer Slide Time: 30:07 min)<p>

Now,  maintenance models can be very similar to the development models  that we havetalked about.<s> So,  if you take a look  at  these  spiral models  that existed we can have aspiral model of maintenance as well.<s> You  are already familiar with the developmentspiral model so you can have something very similar to that.<s> in different phases what youare basically doing is this is the specification phase (Refer Slide Time: 30:32) and thisspecification phase when applied to maintenance is really that you are collecting a set ofrequirements and then you are deciding that it is going to go into a particular release sothis can be  for example,  the first spiral may be released  1; the  patch level one of thesoftware,  the second spiral may be released  2  and so on and so forth and  you can havemany spiral as you want so the first case may be simply the specification of the changesthat happen;  the second phase would be  the  implementation of the changes;  the thirdphase would be testing or validation of the changes that occur and the fourth phase wouldbe putting it into operation.<p>
