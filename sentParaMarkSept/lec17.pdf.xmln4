But such modules might inject a few problems into the systems architecture  becausewhen one role wants to access only one specific activity or specific interface on thatmodule, it also gets access to some thing else which is not required by that role, then yourbreaking encapsulation of the system because you are exposing more than what isrequired for a given role.<s> So it  is very important to design your modules,  keep themcohesive.<s> The roles which access these modules play a major part in this module design.For example in object oriented design you could use multiple inheritance and then if youhave multiple inheritances of interfaces if you have two three interfaces and oneimplementation of this class.<s> That implementation shares common state or common datastructures in order to implement all the three interfaces and again the module is stillcohesive.Then the coupling amongst different modules that  is interdependencies amongst themodules must be as low as possible.<s> If the modules depend too much on each other and ifthere is too much coupling,  then changing one independently without affecting othermodule, without having to change the other module becomes difficult or impossible.<s> Socoupling and cohesion are very important aspects in modularity.<s> Several approaches havebeen proposed to architecting systems and various books have been written on this.<s> Onesuch reference has been mentioned on this slide and you could go through the list of thereferences which I have used during this presentation and the list has been given at theend of this lecture.<p>

(Refer Slide Time: 17:12)<p>

We will briefly look at some of these approaches to architecture.<s> Zachmans frameworkis a very important approach to architecture.<s> How to go about architecting a system, whatneeds to be architected, how many view points are there for a given system, is there onlyone architecture or there  are  many view points?<s> For example when you model yoursoftware,  you have to  do static modeling,  dynamic modeling,  you draw class diagrams,object diagrams,  interaction diagrams,  activity diagrams,  flowcharts,  DFDs,  entityrelationships, state diagrams and deployment diagrams.<p>

All these models give you different views of the same software.<s> How many such viewsdo you have for architecture?<s> Is there one unique view for software or are there manyviews?<s> What are the different aspects which have to consider when you are architectinga system?<s> Many approaches have been proposed and this area is still evolving.<s> And thereis lot of academic discussion on what is to be architected and how it is to be architected,what  are the basic primitives,  what are the basic connectors,  what are the architecturaldescription languages,  how to model  or how to represent your architectural modelspictorially?<s> There is lot of research going on in academic community on architecture.<s> Weare going to look at some of the existing approaches to architecture.<p>

One important approach is Zachman's  framework.<s> It gives us 30  architectural viewpoints.<s> From thirty different view points,  you could get 30  different architecture for thegiven system.<s> We will look at what are those  later.<s> Then  there is ISO standard calledOpen  Distributed  Processing.<s> This gives an approach to architecting distributedsystems.<s> It gives you mainly 5  view point reference model and then there is domainanalysis approach,  when you mainly look at the domain.<s> For example,  there are agentoriented systems where you do an analysis based on agents and what are the entities inthe domain and how agents are related to those entities.<p>
