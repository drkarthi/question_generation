You may have a server process in which many objects are held.<s> But this does not comeout in the computational viewpoint.<s> There we are mainly talking about corecomputational objects and relations among them, whereas in engineering view point, weare talking about the engineering aspects of the system.<s> So some more objects come outin this engineering view point.So you have to carry over the objects from the computational view point and also add theengineering objects such as say proxies and skeleton which you do  not have to detailwhen you are talking of the computational view point.<s> If you get the entire architecture inone shot,  then it will be too complex to comprehend.<s> If you separate these viewpoints,you are looking at different kinds of architectures for different roles.<s> So this is anotherapproach to architecting and this is specifically for distributed systems.<s> In this approachyou have to also look into various transparencies guaranteed by your system.<p>

(Refer Slide Time: 40:33)<p>

For example do you guarantee access transparency?<s> Access transparency hides differencein data representation and invocation mechanism.<s> For example, you may use your serverthrough function calls, but your server may be object oriented which requires memberfunction call or you may have an implementation which is in COBOL but you have yourclient which is in a object oriented programming languages,  which understands classes,objects  and invocation on objects.<s> So  this access transparency hides the actual datarepresentation from invocation mechanism.<s> The invocation mechanism is different fromthe actual data representation.<p>
