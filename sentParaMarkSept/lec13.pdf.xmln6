(Refer Slide Time: 22:40)<p>

The first key is that of reuse and reuse was one of the main causes why software failed.So we have to attack that by making software modules be more reusable by having theappropriate degree of modularization or encapsulation within the software.<s> We shouldgive  the confidence to the user that this  module has been tested under wide variety  ofconditions, the module or the component is going to work on a wide variety of platformand therefore it is reusable and they do not have to develop their own piece of softwarefor something like this.<s> We have seen all the benefits of reuse in past lectures, but the keyone are it increases reliability which means it is going to directly improve robustness, itreduces the development time.<p>

It is not just a software quality that gets improved, but also reduces the risk in terms ofthe process side of it and in terms of estimating how long a piece of software is going totake to construct can  also be brought down by reuse.<s> We have to distinguish betweendesigning a piece of software by reusing  component  which is called design with  reuseand a designing a component itself with in a your software construction process so that itcan be reused across a wide variety of situation which is  called design for  reuse.<s> Thesecond key to achieving structural quality is that of abstraction.<p>
