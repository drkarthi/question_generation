(Refer Slide Time: 19:46 min)<p>

So let us start taking a look at the different forms of reuse that can exist.<s> Remember wesaid that you know there are different levels of reuse and this is related to that.<s> The firstone is that of generator-based reuse and these magnifies  themselves in the  form  ofprogram generators, code generators and so on.<p>

The  second one would be component based software engineering.<s> We  have  alreadymentioned  this.<s> So you are reusing components; you are creating and reusing  reusablecomponents so that it is both sides of the equation designed for reuse and designed withreuse then there are frameworks that we can take a look at; application frameworks whichare basically ways of reusing high level designs of architectures and some level of codesso there are  abstract interfaces that are provided that have to be completely defined  inyour project but largely it is possible to reuse a lot of the design complexity that has beensolved by somebody else.<p>

Then there are what are called application families or product lines and these also end upreusing lot of the underlying  infrastructure in the core ideas and finally we will take  alook at fairly recent phenomenon called design patterns which basically allow you toreuse designs and just designs by themselves not necessarily code or not necessarily theentire systems.<p>

So what is generator-based reuse is the first thing.<s> We find the notion of a code generator,a compiler for example is composed of a parser, a lexical analyzer, a parser and a codegenerator  (.21:16)  once it analyses  whatever  has been parse it is able to generate theappropriate piece of code.<p>

Now if you extend this notion to being domain specific for example then we can generateentire program  out of some kind of a specification  and this in a way is the reuse ofalgorithms, the reuse of notions of designs as well because you can write out let us say aspecification and if you take a look at financial systems  as  a  vertical  segment thensuppose there is a program generator for financial system which very well understandssome of the elements of the workflow some of the algorithms that are embedded within itso for example if an  invoice has to be generated in a financial system  tax has to beimposed on that invoice so there is an original amount to be billed and there is a taxableamount so that notion can be embedded within the program generator itself.<s> It can also,for example, have tax tables that are built into it that it finds out what the tax is and thenjust plugs this into this particular program.<p>

So  the notion of reusing algorithms  patterns that exist in certain vertical domains andembedding these within the program generator  itself leads to what  is called generatorbased reuse.<s> This is possible certainly when there  are  domain abstractions  and themapping to code can be very clearly defined.<s> Eventually what needs to come out of theprogram generator is executable code and when you can map these abstractions that youare feeding into the generator to the executable code pretty cleanly then you have a wayof reusing lot of stuff that is specific to that particular domain.<p>
