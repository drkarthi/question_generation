We will look at some of the advantages of reuse as we go along.<s> So reuse based softwareengineering can be done at different levels like I talked about.<s> It can be a functional levelthat is, a single function can be reused.<s> For example, in a mathematical library they mayprovide functions for calculating the factorial of a number, for calculating square roots ofnumbers and so on and so forth in the simplest level and all of these functions can be<p>

(Refer Slide Time: 08:39 min)<p>

When you are writing a program that requires calculating the factorial you would notwrite your own code you will simply call this function of a library and this is a commonform of reuse this has been done from quite a while but a higher level of abstraction forreuse may be that of a component.<s> So the component embeds a certain set of relatedfunctionality into it and a  good example of a component may be a text frame within agraphical user interface that  is a good example of a component or it can be somethingmuch  of a higher level; the  component may embed a  more  series algorithm such asoptimizing a certain function so optimizing a set of related functions  and therefore youcan reuse  the  entire component because you may need more than one interface of thatcomponent within your program and yet a higher level of reuse like we have seen beforeis that the  entire application can be reused  called cots reuse are common off-the-shelfapplications  that are  taken as a whole and basically reused  by adopting it to meet thebusiness processes and the needs of your particular project.<p>

(Refer Slide Time: 09:47 min)<p>

In practice basically common off-the-shelf  reuse is becoming quite common.<s> Thefunctional reuse paradigm has existed from quite a long time.<s> We have seen libraries thatwere written in C, we have seen libraries that were written for Fortran, there are commonlibraries available for  engineering design problems  that you can pick and use that havebeen available from the  last two to three decades but component based reuse creatingboth creating components  as well as creating  systems  out of components  is  a  relativelynew science,  it is only becoming solid now;  it  is only over  the past  five years thatcomponent based software engineering as it is come to be known has become a science inits own right and people have developed ways of describing components which are quiteabstract of gluing together components in a visual manner and so on that makes softwareengineering much simpler and much more reliable more importantly.<p>
